program parcialtrenes;
type
ciudad:1..20;
meses:1..12;
 viaje=record
   codtren:integer;
   mes:meses;
   cantpasajeros:integer;
   codciudad:ciudad;
   end;
   
 lista=^nodo
   nodo=record
    dato:viaje;
    sig:lista;
  end;
  
  recaudacionesXmes=array[meses] of integer;
  
  ticketXciudad=array[ciudad] of integer;
  
  incisoa=record
    codtren:integer;
    viajes:integer;
end;

procedure cargarvector(var v:ticketXciudad);
var
begin    // SE DISPONE
end;

procedure cargarlista(var l:lista;v:viaje);
var
begin   // SE DISPONE
end;

function prom(pasajeros,viajes):real;
var
aux:real
begin
aux:=pasajeros/viajes;
prom:=aux;
end;

procedure maximo( v:vmeses;var mesmax:meses; var max:integer);
var
i:integer;
begin
for i:=1 to 12 do
  if(v[i]>max)then begin
    mesmas:=i;
    max:=v[i];
  end;
end;

procedure agregaralfinal(var l:lista, r:incisoa);
var
nue,act:lista;
begin
  new(nue);
  nue^.dato:=r;
  nue^.sig:=NIL;
if(l=nil)then
  l:=nue;
else begin 
  act:=l
  act^.sig:=nue;
end;
end;

procedure inicializarvec(var  v:vmeses);
var
i:integer;
begin
for i:=1 to 12 do begin
  v[i]:=0;
 end;
end;

procedure procesar (l:lista;var l2:lista);
var
r:incisoa;
mesmax:meses;
vmeses:recaudacionesXmes;
vprecios:ticketXciudad;
trenactual:string;
cantviajes,max,totalpasajeros,precioactual:integer;
begin
cargarvector(vprecios);
inicializarvec(vmeses);
cantviajes:=0;totalpasajeros:=0:precioactual:=0; max:=-1;
while(l<>nil)
  trenactual:=l^.dato.codtren
  while(l<>nil)and(l^.dato.codtren=trenactual)do begin
    cantviajes:=cantviajes+1;
    totalpasajeros:=totalpasajeros+l^.dato.pasajeros;
    precioactual:=vprecios[l^.dato.codciudad];
    vmeses[l^.dato.mes]:=vmeses[l^.dato.mes]+precioactual*totalpasajeros;
    l:=l^l.sig;
    end;
  r.codtren:=l^.dato.codtren;
  r.viajes:=cantviajes;
  agregaralfinal(l2,r)    
  writeln(prom(totalpasajeros,cantviajes));
 end;
 maximo(vmeses,mesmax,max);
end;

var
l,l2:lista;
v:viaje;
begin
l:=nil;
l2:=nil
cargarlista(l.v);
procesar(l,l2);
end.
