program parcialcolectivos;
type;
coche=1000..2500
meses=1..12;
viaje=record
  codviaje:integer;
  numcoche:coche;
  mes:meses;
  pasajesvendidos:integer;
  dnichofer:integer;
  end;
 lista=^nodo
   nodo=record
    dato:viaje;
    sig:lista
    end;
capacidad=array[coche] of integer;
viajes=Array[coche] of integer;
pasajeros=Array[coche] of integer;

procedure cargarvec(var c:capacidad);
var
begin//SE DISPONE
end;

procedure cargarlista(var l:lista;v:viaje);
var
begin//SE DISPONE
end;

procedure inicializar(var v1:viajes; var v2:pasajeros);
var
i:integer;
begin
for i:1000 to 2500 do
  v1[i]:=0;
for i:1000 to 2500 do
  v2[i]:=0;
end;

procedure agregaradelante(var l:lista; v:viaje);
var
nue:lista
begin
new(nue);
nue^.dato:=v;
nue^.sig:=l;
l:=nue;
end;

function cumple(l:lista;c:capacidad):boolean
var
aux:boolean;
begin
aux:=false;
 if(l^.dato.mes=2)and(l^.dato.dnichofer mod 10=0)and((l^.dato.pasajesvendidos<c[l^.dato.numcoche])then
   aux:=true;
end;

procedure maximo(v:viajes;var max:integer;var cochemax:coche);
var
i:integer;
begin
for i:=1000 to 2500 do
  if(v[i]>max)then begin
     max:=v[i];
     cochemax:=i;
  end;
end;

function prom(pasajeros,viajes:integer):integer
var
aux:integer;
begin
aux:=pasajeros/viajes;
prom:=aux;
end

procedure incisoC(vpasajeros:pasajeros;vviajes:viajes);
var
i:integer;
begin
for i:=1000 to 2500 do
   writeln (prom (vpasajeros[i], vviajes[i]) )
end;

porcedure processar(l,l2:lista; c:capacidad;v:viaje);
var
vviajes:viajes;
cochemax:coche;
vpasajeros:pasajeros;
totalpasajeros,totalviajes:integer;
begin
inicializar(vviajes,vpasajeros);
totalpasajeros:=0;totalviajes:=0;max:=-1;cochemax:=0;
while (l<>nil)do begin
   totalpasajeros:=totalpasajeros+l^.dato.pasajesvendidos;
   totalviajes:=totalviajes+1;
   vpasajeros[l^.dato.numcoche]:=vpasajeros[l^.dato.numcoche]+totalpasajeros;
   vviajes[l^.dato.numcoche]:=vviajes[l^.dato.numcoche]+totalviajes;
   if(cumple(l,c))then
      agregaradelante(l2,v);
   l:=l^.sig;
  end;
maximo(vviajes,max,cochemax);
incisoC(vpasajeros,vviajes);
end;

var
l,l2:lista;
c:capacidad;
v:viaje;
begin
l:=nil;
l2:=nil;
cargarvec(c);
cargarlista(l,v);
procesar(l,l2,c,v);
end.
